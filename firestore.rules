rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validate user data structure
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && validateUserData(request.resource.data);
      
      // Validate updates to user data
      allow update: if request.auth != null 
        && request.auth.uid == userId
        && validateUserUpdate(request.resource.data);
    }
    
    // Helper functions for data validation
    function validateUserData(data) {
      return data.keys().hasAll(['email', 'displayName', 'createdAt', 'settings', 'learningLanguages', 'baseLanguage'])
        && data.email is string
        && data.displayName is string
        && data.createdAt is timestamp
        && validateSettings(data.settings)
        && data.learningLanguages is list
        && data.baseLanguage is string;
    }
    
    function validateUserUpdate(data) {
      return data.keys().hasAny(['displayName', 'email', 'settings', 'learningLanguages', 'baseLanguage', 'updatedAt', 'xp', 'level', 'streak', 'wordsLearned', 'badges'])
        && (!('displayName' in data) || data.displayName is string)
        && (!('email' in data) || data.email is string)
        && (!('settings' in data) || validateSettings(data.settings))
        && (!('learningLanguages' in data) || data.learningLanguages is list)
        && (!('baseLanguage' in data) || data.baseLanguage is string)
        && (!('updatedAt' in data) || data.updatedAt is timestamp)
        && (!('xp' in data) || data.xp is number)
        && (!('level' in data) || data.level is number)
        && (!('streak' in data) || data.streak is number)
        && (!('wordsLearned' in data) || data.wordsLearned is number)
        && (!('badges' in data) || data.badges is list);
    }
    
    function validateSettings(settings) {
      return settings.keys().hasAll(['language', 'fontSize', 'sound', 'notifications', 'theme'])
        && settings.language is string
        && settings.fontSize in ['small', 'medium', 'large']
        && settings.sound is bool
        && settings.notifications is bool
        && settings.theme in ['light', 'dark', 'system'];
    }
  }
}
